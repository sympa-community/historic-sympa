#!--PERL--
# -*- indent-tabs-mode: nil; -*-
# vim:ft=perl:et:sw=4
# $Id$

## Until Sympa release 3.4.3.1 HTML view of moderated messages was created by
## wwsympa.fgci, when needed.
## It is now created by sympa.pl when the message is received.
## This script will create all missing HTML files in the moderation spool

# Note: 6.2a.32 or earlier stored HTML view into modqueue.
# 6.2b has dedicated directory specified by viewmail_dir parameter.

use lib '--modulesdir--';
use strict;
use warnings;

use Conf;
use Sympa::Constants;
use List;
use Log;
use SDM;
use tools;

unless (Conf::load(Sympa::Constants::CONFIG)) {
    die "Can't load Sympa configuration file";
}
Log::do_openlog($Conf::Conf{'syslog'}, $Conf::Conf{'log_socket_type'},
    'sympa');

if ($Conf::Conf{'db_name'} and $Conf::Conf{'db_type'}) {
    unless (SDM::probe_db()) {
        die "Sympa can't connect to database";
    }
}    #  to check availabity of Sympa database

# Set the UserID & GroupID for the process
$( = $) = (getgrnam(Sympa::Constants::GROUP))[2];
$< = $> = (getpwnam(Sympa::Constants::USER))[2];

# Sets the UMASK
umask(oct($Conf::Conf{'umask'}));

my $modspool = $Conf::Conf{'queuemod'};

## Loads message list
unless ($modspool and opendir SPOOL, $modspool) {
    die "Unable to read spool";
}

foreach my $msg_file (sort grep(!/^\./, readdir SPOOL)) {
    next if $msg_file =~ /^\./;

    my $metadata = tools::unmarshal_metadata($modspool,
        $msg_file,
        qr{\A([^\s\@]+)(?:\@([\w\.\-]+))?_([^_]+)\z},
        [qw(localpart domainpart modkey)]
    );
    next unless $metadata;
    my $message = Message->new_from_file($modspool . '/' . $msg_file,
        %$metadata);
    next unless $message;
    my $list = $message->{'list'};

    print "Creating HTML version for $modspool/$msg_file\n";

    my $destination_dir =
          $Conf::Conf{'viewmail_dir'} . '/mod/'
        . $list->get_list_id() . '/'
        . $metadata->{'modkey'};
    Sympa::Archive::convert_single_message(
        $list, $message,
        'destination_dir' => $destination_dir,
        'attachement_url' =>
            join('/', '..', 'viewmod', $list->{'name'}, $metadata->{'modkey'}),
    );
}
closedir SPOOL;
