#!--PERL--
# -*- indent-tabs-mode: t; -*-
# vim:ft=perl:noet:sw=8:wrap:textwidth=78

## Until Sympa release 3.4.3.1 HTML view of moderated messages was created by wwsympa.fgci, when needed.
## It is now created by sympa.pl when the message is received. 
## This script will create all missing HTML files in the moderation spool

use strict;
use lib '--modulesdir--';

use English qw(-no_match_vars);

use Sympa::Configuration;
use Sympa::Constants;
use Sympa::List;
use Sympa::Log;
use Sympa::Tools;
use Sympa::Upgrade;

unless (Sympa::Configuration::load(Sympa::Constants::CONFIG)) {
    die "Can't load Sympa configuration file";
}
Sympa::Log::do_openlog($Sympa::Configuration::Conf{'syslog'}, $Sympa::Configuration::Conf{'log_socket_type'}, 'sympa');

if ($Sympa::Configuration::Conf{'db_name'} and $Sympa::Configuration::Conf{'db_type'}) {
    unless (Sympa::Upgrade::probe_db()) {
	die "Sympa can't connect to database";
    }
} #  to check availabity of Sympa database
Sympa::List::_apply_defaults(); # else reading of a List configuration won't work 

# Set the UserID & GroupID for the process
$GID = $EGID = (getgrnam(Sympa::Constants::GROUP))[2];
$UID = $EUID = (getpwnam(Sympa::Constants::USER))[2];

# Sets the UMASK
umask(oct($Sympa::Configuration::Conf{'umask'}));

## Loads message list
unless (opendir SPOOL, $Sympa::Configuration::Conf{'queuemod'}) {
    die "Unable to read spool";
}

foreach my $msg ( sort grep(!/^\./, readdir SPOOL )) {
    
    next if ($msg =~ /^\./);
    
    $msg =~ /^(.*)\_([^\_]+)$/;
    my ($listaddress, $modkey) = ($1, $2);
    
    
    if (-d "$Sympa::Configuration::Conf{'queuemod'}/.$msg") {
	next;
    }
    
    print "Creating HTML version for $Sympa::Configuration::Conf{'queuemod'}/$msg\n";
    
    my ($listname, $listrobot) = split /\@/, $listaddress;
    my $self = new Sympa::List ($listname, $listrobot);
    
    my( @rcpt);
    my $admin = $self->{'admin'};
    my $name = $self->{'name'};
    my $host = $admin->{'host'};
    my $robot = $self->{'domain'};
    my $modqueue = $Sympa::Configuration::Conf{'queuemod'};
    unless ($name && $admin) {
	print STDERR "Unkown list $listaddress, skipping\n";
	next;
    }
    
    my $tmp_dir = "$modqueue\/.$name\_$modkey";
    unless (-d $tmp_dir) {
	unless (mkdir ($tmp_dir, 0777)) {
	    die "May not create $tmp_dir";
	}
	my $mhonarc_ressources = Sympa::Tools::get_filename('etc',{},'mhonarc-ressources.tt2', $robot, $self, $Sympa::Configuration::Conf{'etc'});
	unless ($mhonarc_ressources) {
	    die "Cannot find any MhOnArc ressource file";
	}
	
	## generate HTML
	chdir $tmp_dir;
	my $mhonarc = Sympa::Configuration::get_robot_conf($robot, 'mhonarc');
	open ARCMOD, "$mhonarc  -single -rcfile $mhonarc_ressources -definevars listname=$name -definevars hostname=$host $modqueue/$name\_$modkey|";
	open MSG, ">msg00000.html";
	print MSG <ARCMOD>;
	close MSG;
	close ARCMOD;
	chdir $Sympa::Configuration::Conf{'home'};
    }    
}
closedir SPOOL;


