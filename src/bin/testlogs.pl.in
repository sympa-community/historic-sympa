#!--PERL--
# -*- indent-tabs-mode: nil; -*-
# vim:ft=perl:et:sw=4
# $Id$

# Sympa - SYsteme de Multi-Postage Automatique
#
# Copyright (c) 1997-1999 Institut Pasteur & Christophe Wolfhugel
# Copyright (c) 1997-2011 Comite Reseau des Universites
# Copyright (c) 2011-2014 GIP RENATER
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use lib '--modulesdir--';

use Getopt::Long;

use Sympa::Constants;
use Sympa::Log::Syslog;
use Sympa::Site;

my %options;
GetOptions(\%options, 'debug|d', 'log_level=s', 'config|f=s');

my $config_file = $options{'config'} || Sympa::Constants::CONFIG;
## Load configuration file
unless (Sympa::Site->load('config_file' => $config_file)) {
    Sympa::Log::Syslog::fatal_err('Configuration file %s has errors.',
        $config_file);
}

## Open the syslog and say we're read out stuff.
Sympa::Log::Syslog::do_openlog(Sympa::Site->syslog, 'sympa');

# setting log_level using conf unless it is set by calling option
if ($options{'log_level'}) {
    Sympa::Log::Syslog::do_log(
        'info',
        'Logs seems OK, log level set using options : %s',
        $options{'log_level'}
    );
} else {
    Sympa::Log::Syslog::set_log_level(Sympa::Site->log_level);
    Sympa::Log::Syslog::do_log('info', 'Logs seems OK, default log level %s',
        Sympa::Site->log_level);
}
print "Ok, now check logs \n";
