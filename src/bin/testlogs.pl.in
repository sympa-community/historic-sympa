#!--PERL--
# -*- indent-tabs-mode: nil; -*-
# vim:ft=perl:et:sw=4
# $Id$

# Sympa - SYsteme de Multi-Postage Automatique
#
# Copyright (c) 1997-1999 Institut Pasteur & Christophe Wolfhugel
# Copyright (c) 1997-2011 Comite Reseau des Universites
# Copyright (c) 2011-2014 GIP RENATER
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use lib '--modulesdir--';

use Getopt::Long;

use Sympa::Constants;
use Sympa::Logger;
use Sympa::Logger::Syslog;
use Sympa::Site;
use Sympa::Tools::Daemon;

my %options;
GetOptions(\%options, 'debug|d', 'log_level=s', 'config|f=s');

my $config_file = $options{'config'} || Sympa::Constants::CONFIG;
## Load configuration file
unless (Sympa::Site->load('config_file' => $config_file)) {
    Sympa::Tools::Daemon::terminate_on_expected_error(
        'Configuration file %s has errors.',
        $config_file
    );
}

my $log_level = $options{'log_level'} || Sympa::Site->log_level;
our $logger = Sympa::Logger::Syslog->new(
    level    => $log_level,
    service  => 'sympa',
    facility => Sympa::Site->log_facility(),
);
$logger->do_log(
    Sympa::Logger::INFO,
    "Logger initialized, with log level $log_level"
);

print "Ok, now check logs \n";
