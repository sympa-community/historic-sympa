# $Id$

use strict;
use warnings;

use Sympa::ConfDef;
use Sympa::Constants;

print sympa_conf_pod();

sub sympa_conf_pod {
    my $pod = '';

    $pod .= sprintf <<'EOF', Sympa::Constants::CONFIG;
=encoding utf-8

=head1 NAME

sympa.conf, robot.conf - Configuration file for default site and robot

=head1 DESCRIPTION

F<%s> is main configuration file of Sympa.
Several parameters definied in this file may be overridden by F<robot.conf>
configuration file for each robot.

Format of F<sympa.conf> and F<robot.conf> is as following:

=over

=item *

Lines beginning with C<#> and containing only spaces are ignored.

=item *

Each line has the form "I<parameter> I<value>".
I<value> may contain spaces but may not contain newlines.

=back

Below is entire list of configuration parameters.
For more details of each parameter see Reference Manual.

=head2 Parameters

=cut

EOF
    my $first_section = 1;
    foreach my $param (@Sympa::ConfDef::params) {
        if (exists $param->{'name'}) {
            my $name    = $param->{'name'};
            my $default = $param->{'default'}
                if exists $param->{'default'};
            my $query = $param->{'gettext_id'}
                if exists $param->{'gettext_id'};
            my $advice = $param->{'gettext_comment'}
                if exists $param->{'gettext_comment'};
            my $example = $param->{'sample'}
                if exists $param->{'sample'};
            my $optional = 1
                if exists $param->{'optional'} and $param->{'optional'};
            my $vhost = 1
                if exists $param->{'vhost'} and $param->{'vhost'};
            my $multiple = 1
                if exists $param->{'multiple'} and $param->{'multiple'};
            my $scenario = $name
                if exists $param->{'scenario'} and $param->{'scenario'};

            $pod .= sprintf "=item %s\n\n", $param->{'name'};
            if (defined $default) {
                $pod .= sprintf "(Default value: C<%s>)\n",
                    _escape_pod($default);
            } elsif ($optional) {
                $pod .= sprintf "(Optioal)\n";
            } else {
                $pod .= sprintf "(Mandatory)\n";
            }
            if (defined $vhost) {
                $pod .= sprintf "(Overridable by each F<robot.conf>)\n\n";
            } else {
                $pod .= "\n";
            }
            $pod .= sprintf
                "Value of this parameter is name of C<%s> scenario.\n\n",
                $name
                if defined $scenario;
            $pod .= sprintf "%s\n\n", _escape_pod($query)
                if defined $query;
            $pod .= sprintf "Example:\n\n  %s %s\n\n", $name, $example
                if defined $example;
            $pod .= sprintf "%s\n\n", _escape_pod($advice)
                if defined $advice;
        } else {
            $pod .= "=back\n\n" unless $first_section;
            $first_section = 0;
            $pod .= sprintf "=head3 %s\n\n",
                _escape_pod($param->{'gettext_id'});
            $pod .= "=over\n\n";
        }
    }
    $pod .= "=back\n\n" unless $first_section;

    my @args = (Sympa::Constants::CONFIG(), Sympa::Constants::SYSCONFDIR());
    $pod .= sprintf <<'EOF', @args;
=head1 FILES

=over

=item %s

Sympa main configuration file.

=item %s/E<lt>robot nameE<gt>/robot.conf

Configuration specific to each virtual host.

=back

=head1 SEE ALSO

I<Sympa, Mailing List Management Software - Reference Manual>.
L<http://www.sympa.org/manual/>.

=cut
EOF

    return $pod;
}

sub _escape_pod {
    my $string = shift;
    $string =~ s/([&<>])/
        'E<' . {'&' => 'amp', '<' => 'lt', '>' => 'gt'}->{$1} . '>'
    /eg;
    return $string;
}
